// dart format width=80
import 'package:drift/internal/versioned_schema.dart' as i0;
import 'package:drift/drift.dart' as i1;
import 'dart:typed_data' as i2;
import 'package:drift/drift.dart'; // ignore_for_file: type=lint,unused_import

// GENERATED BY drift_dev, DO NOT MODIFY.
final class Schema2 extends i0.VersionedSchema {
  Schema2({required super.database}) : super(version: 2);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    contacts,
    messages,
    signalIdentityKeyStores,
    signalPreKeyStores,
    signalSenderKeyStores,
    signalSessionStores,
  ];
  late final Shape0 contacts = Shape0(
      source: i0.VersionedTable(
        entityName: 'contacts',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(user_id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 messages = Shape1(
      source: i0.VersionedTable(
        entityName: 'messages',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 signalIdentityKeyStores = Shape2(
      source: i0.VersionedTable(
        entityName: 'signal_identity_key_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(device_id, name)',
        ],
        columns: [
          _column_31,
          _column_32,
          _column_33,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 signalPreKeyStores = Shape3(
      source: i0.VersionedTable(
        entityName: 'signal_pre_key_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(pre_key_id)',
        ],
        columns: [
          _column_34,
          _column_35,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 signalSenderKeyStores = Shape4(
      source: i0.VersionedTable(
        entityName: 'signal_sender_key_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(sender_key_name)',
        ],
        columns: [
          _column_36,
          _column_37,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 signalSessionStores = Shape5(
      source: i0.VersionedTable(
        entityName: 'signal_session_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(device_id, name)',
        ],
        columns: [
          _column_31,
          _column_32,
          _column_38,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape0 extends i0.VersionedTable {
  Shape0({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get userId =>
      columnsByName['user_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get username =>
      columnsByName['username']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get displayName =>
      columnsByName['display_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get nickName =>
      columnsByName['nick_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get avatarSvg =>
      columnsByName['avatar_svg']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get myAvatarCounter =>
      columnsByName['my_avatar_counter']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get accepted =>
      columnsByName['accepted']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get requested =>
      columnsByName['requested']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get blocked =>
      columnsByName['blocked']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get verified =>
      columnsByName['verified']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get totalMediaCounter =>
      columnsByName['total_media_counter']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get lastMessageSend =>
      columnsByName['last_message_send']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get lastMessageReceived =>
      columnsByName['last_message_received']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get lastFlameCounterChange =>
      columnsByName['last_flame_counter_change']!
          as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get lastMessageExchange =>
      columnsByName['last_message_exchange']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get flameCounter =>
      columnsByName['flame_counter']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<int> _column_0(String aliasedName) =>
    i1.GeneratedColumn<int>('user_id', aliasedName, false,
        type: i1.DriftSqlType.int);
i1.GeneratedColumn<String> _column_1(String aliasedName) =>
    i1.GeneratedColumn<String>('username', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways('UNIQUE'));
i1.GeneratedColumn<String> _column_2(String aliasedName) =>
    i1.GeneratedColumn<String>('display_name', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_3(String aliasedName) =>
    i1.GeneratedColumn<String>('nick_name', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_4(String aliasedName) =>
    i1.GeneratedColumn<String>('avatar_svg', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<int> _column_5(String aliasedName) =>
    i1.GeneratedColumn<int>('my_avatar_counter', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<bool> _column_6(String aliasedName) =>
    i1.GeneratedColumn<bool>('accepted', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("accepted" IN (0, 1))'),
        defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<bool> _column_7(String aliasedName) =>
    i1.GeneratedColumn<bool>('requested', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("requested" IN (0, 1))'),
        defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<bool> _column_8(String aliasedName) =>
    i1.GeneratedColumn<bool>('blocked', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("blocked" IN (0, 1))'),
        defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<bool> _column_9(String aliasedName) =>
    i1.GeneratedColumn<bool>('verified', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("verified" IN (0, 1))'),
        defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<DateTime> _column_10(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('created_at', aliasedName, false,
        type: i1.DriftSqlType.dateTime,
        defaultValue: const CustomExpression(
            'CAST(strftime(\'%s\', CURRENT_TIMESTAMP) AS INTEGER)'));
i1.GeneratedColumn<int> _column_11(String aliasedName) =>
    i1.GeneratedColumn<int>('total_media_counter', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<DateTime> _column_12(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('last_message_send', aliasedName, true,
        type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<DateTime> _column_13(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('last_message_received', aliasedName, true,
        type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<DateTime> _column_14(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('last_flame_counter_change', aliasedName, true,
        type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<DateTime> _column_15(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('last_message_exchange', aliasedName, false,
        type: i1.DriftSqlType.dateTime,
        defaultValue: const CustomExpression(
            'CAST(strftime(\'%s\', CURRENT_TIMESTAMP) AS INTEGER)'));
i1.GeneratedColumn<int> _column_16(String aliasedName) =>
    i1.GeneratedColumn<int>('flame_counter', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const CustomExpression('0'));

class Shape1 extends i0.VersionedTable {
  Shape1({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get contactId =>
      columnsByName['contact_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get messageId =>
      columnsByName['message_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get messageOtherId =>
      columnsByName['message_other_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get responseToMessageId =>
      columnsByName['response_to_message_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get responseToOtherMessageId =>
      columnsByName['response_to_other_message_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get acknowledgeByUser =>
      columnsByName['acknowledge_by_user']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<int> get downloadState =>
      columnsByName['download_state']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get acknowledgeByServer =>
      columnsByName['acknowledge_by_server']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get errorWhileSending =>
      columnsByName['error_while_sending']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get kind =>
      columnsByName['kind']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get contentJson =>
      columnsByName['content_json']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get openedAt =>
      columnsByName['opened_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get sendAt =>
      columnsByName['send_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<int> _column_17(String aliasedName) =>
    i1.GeneratedColumn<int>('contact_id', aliasedName, false,
        type: i1.DriftSqlType.int,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'REFERENCES contacts (user_id)'));
i1.GeneratedColumn<int> _column_18(String aliasedName) =>
    i1.GeneratedColumn<int>('message_id', aliasedName, false,
        hasAutoIncrement: true,
        type: i1.DriftSqlType.int,
        defaultConstraints:
            i1.GeneratedColumn.constraintIsAlways('PRIMARY KEY AUTOINCREMENT'));
i1.GeneratedColumn<int> _column_19(String aliasedName) =>
    i1.GeneratedColumn<int>('message_other_id', aliasedName, true,
        type: i1.DriftSqlType.int);
i1.GeneratedColumn<int> _column_20(String aliasedName) =>
    i1.GeneratedColumn<int>('response_to_message_id', aliasedName, true,
        type: i1.DriftSqlType.int);
i1.GeneratedColumn<int> _column_21(String aliasedName) =>
    i1.GeneratedColumn<int>('response_to_other_message_id', aliasedName, true,
        type: i1.DriftSqlType.int);
i1.GeneratedColumn<bool> _column_22(String aliasedName) =>
    i1.GeneratedColumn<bool>('acknowledge_by_user', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("acknowledge_by_user" IN (0, 1))'),
        defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<int> _column_23(String aliasedName) =>
    i1.GeneratedColumn<int>('download_state', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const CustomExpression('2'));
i1.GeneratedColumn<bool> _column_24(String aliasedName) =>
    i1.GeneratedColumn<bool>('acknowledge_by_server', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("acknowledge_by_server" IN (0, 1))'),
        defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<bool> _column_25(String aliasedName) =>
    i1.GeneratedColumn<bool>('error_while_sending', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("error_while_sending" IN (0, 1))'),
        defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<String> _column_26(String aliasedName) =>
    i1.GeneratedColumn<String>('kind', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_27(String aliasedName) =>
    i1.GeneratedColumn<String>('content_json', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<DateTime> _column_28(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('opened_at', aliasedName, true,
        type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<DateTime> _column_29(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('send_at', aliasedName, false,
        type: i1.DriftSqlType.dateTime,
        defaultValue: const CustomExpression(
            'CAST(strftime(\'%s\', CURRENT_TIMESTAMP) AS INTEGER)'));
i1.GeneratedColumn<DateTime> _column_30(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('updated_at', aliasedName, false,
        type: i1.DriftSqlType.dateTime,
        defaultValue: const CustomExpression(
            'CAST(strftime(\'%s\', CURRENT_TIMESTAMP) AS INTEGER)'));

class Shape2 extends i0.VersionedTable {
  Shape2({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get deviceId =>
      columnsByName['device_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<i2.Uint8List> get identityKey =>
      columnsByName['identity_key']! as i1.GeneratedColumn<i2.Uint8List>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<int> _column_31(String aliasedName) =>
    i1.GeneratedColumn<int>('device_id', aliasedName, false,
        type: i1.DriftSqlType.int);
i1.GeneratedColumn<String> _column_32(String aliasedName) =>
    i1.GeneratedColumn<String>('name', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<i2.Uint8List> _column_33(String aliasedName) =>
    i1.GeneratedColumn<i2.Uint8List>('identity_key', aliasedName, false,
        type: i1.DriftSqlType.blob);

class Shape3 extends i0.VersionedTable {
  Shape3({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get preKeyId =>
      columnsByName['pre_key_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<i2.Uint8List> get preKey =>
      columnsByName['pre_key']! as i1.GeneratedColumn<i2.Uint8List>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<int> _column_34(String aliasedName) =>
    i1.GeneratedColumn<int>('pre_key_id', aliasedName, false,
        type: i1.DriftSqlType.int);
i1.GeneratedColumn<i2.Uint8List> _column_35(String aliasedName) =>
    i1.GeneratedColumn<i2.Uint8List>('pre_key', aliasedName, false,
        type: i1.DriftSqlType.blob);

class Shape4 extends i0.VersionedTable {
  Shape4({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get senderKeyName =>
      columnsByName['sender_key_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<i2.Uint8List> get senderKey =>
      columnsByName['sender_key']! as i1.GeneratedColumn<i2.Uint8List>;
}

i1.GeneratedColumn<String> _column_36(String aliasedName) =>
    i1.GeneratedColumn<String>('sender_key_name', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<i2.Uint8List> _column_37(String aliasedName) =>
    i1.GeneratedColumn<i2.Uint8List>('sender_key', aliasedName, false,
        type: i1.DriftSqlType.blob);

class Shape5 extends i0.VersionedTable {
  Shape5({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get deviceId =>
      columnsByName['device_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<i2.Uint8List> get sessionRecord =>
      columnsByName['session_record']! as i1.GeneratedColumn<i2.Uint8List>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<i2.Uint8List> _column_38(String aliasedName) =>
    i1.GeneratedColumn<i2.Uint8List>('session_record', aliasedName, false,
        type: i1.DriftSqlType.blob);

final class Schema3 extends i0.VersionedSchema {
  Schema3({required super.database}) : super(version: 3);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    contacts,
    messages,
    signalIdentityKeyStores,
    signalPreKeyStores,
    signalSenderKeyStores,
    signalSessionStores,
  ];
  late final Shape6 contacts = Shape6(
      source: i0.VersionedTable(
        entityName: 'contacts',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(user_id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_39,
          _column_40,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 messages = Shape1(
      source: i0.VersionedTable(
        entityName: 'messages',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 signalIdentityKeyStores = Shape2(
      source: i0.VersionedTable(
        entityName: 'signal_identity_key_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(device_id, name)',
        ],
        columns: [
          _column_31,
          _column_32,
          _column_33,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 signalPreKeyStores = Shape3(
      source: i0.VersionedTable(
        entityName: 'signal_pre_key_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(pre_key_id)',
        ],
        columns: [
          _column_34,
          _column_35,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 signalSenderKeyStores = Shape4(
      source: i0.VersionedTable(
        entityName: 'signal_sender_key_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(sender_key_name)',
        ],
        columns: [
          _column_36,
          _column_37,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 signalSessionStores = Shape5(
      source: i0.VersionedTable(
        entityName: 'signal_session_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(device_id, name)',
        ],
        columns: [
          _column_31,
          _column_32,
          _column_38,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape6 extends i0.VersionedTable {
  Shape6({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get userId =>
      columnsByName['user_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get username =>
      columnsByName['username']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get displayName =>
      columnsByName['display_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get nickName =>
      columnsByName['nick_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get avatarSvg =>
      columnsByName['avatar_svg']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get myAvatarCounter =>
      columnsByName['my_avatar_counter']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get accepted =>
      columnsByName['accepted']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get requested =>
      columnsByName['requested']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get blocked =>
      columnsByName['blocked']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get verified =>
      columnsByName['verified']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get archived =>
      columnsByName['archived']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<int> get deleteMessagesAfterXMinutes =>
      columnsByName['delete_messages_after_x_minutes']!
          as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get totalMediaCounter =>
      columnsByName['total_media_counter']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get lastMessageSend =>
      columnsByName['last_message_send']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get lastMessageReceived =>
      columnsByName['last_message_received']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get lastFlameCounterChange =>
      columnsByName['last_flame_counter_change']!
          as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get lastMessageExchange =>
      columnsByName['last_message_exchange']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get flameCounter =>
      columnsByName['flame_counter']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<bool> _column_39(String aliasedName) =>
    i1.GeneratedColumn<bool>('archived', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("archived" IN (0, 1))'),
        defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<int> _column_40(String aliasedName) =>
    i1.GeneratedColumn<int>(
        'delete_messages_after_x_minutes', aliasedName, false,
        type: i1.DriftSqlType.int,
        defaultValue: const CustomExpression('1440'));

final class Schema4 extends i0.VersionedSchema {
  Schema4({required super.database}) : super(version: 4);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    contacts,
    messages,
    mediaUploads,
    signalIdentityKeyStores,
    signalPreKeyStores,
    signalSenderKeyStores,
    signalSessionStores,
  ];
  late final Shape6 contacts = Shape6(
      source: i0.VersionedTable(
        entityName: 'contacts',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(user_id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_39,
          _column_40,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 messages = Shape1(
      source: i0.VersionedTable(
        entityName: 'messages',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 mediaUploads = Shape7(
      source: i0.VersionedTable(
        entityName: 'media_uploads',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 signalIdentityKeyStores = Shape2(
      source: i0.VersionedTable(
        entityName: 'signal_identity_key_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(device_id, name)',
        ],
        columns: [
          _column_31,
          _column_32,
          _column_33,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 signalPreKeyStores = Shape3(
      source: i0.VersionedTable(
        entityName: 'signal_pre_key_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(pre_key_id)',
        ],
        columns: [
          _column_34,
          _column_35,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 signalSenderKeyStores = Shape4(
      source: i0.VersionedTable(
        entityName: 'signal_sender_key_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(sender_key_name)',
        ],
        columns: [
          _column_36,
          _column_37,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 signalSessionStores = Shape5(
      source: i0.VersionedTable(
        entityName: 'signal_session_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(device_id, name)',
        ],
        columns: [
          _column_31,
          _column_32,
          _column_38,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape7 extends i0.VersionedTable {
  Shape7({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get mediaUploadId =>
      columnsByName['media_upload_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get state =>
      columnsByName['state']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get metadata =>
      columnsByName['metadata']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get messageIds =>
      columnsByName['message_ids']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get encryptionData =>
      columnsByName['encryption_data']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get uploadTokens =>
      columnsByName['upload_tokens']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get alreadyNotified =>
      columnsByName['already_notified']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<int> _column_41(String aliasedName) =>
    i1.GeneratedColumn<int>('media_upload_id', aliasedName, false,
        hasAutoIncrement: true,
        type: i1.DriftSqlType.int,
        defaultConstraints:
            i1.GeneratedColumn.constraintIsAlways('PRIMARY KEY AUTOINCREMENT'));
i1.GeneratedColumn<String> _column_42(String aliasedName) =>
    i1.GeneratedColumn<String>('state', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultValue: const CustomExpression('\'pending\''));
i1.GeneratedColumn<String> _column_43(String aliasedName) =>
    i1.GeneratedColumn<String>('metadata', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_44(String aliasedName) =>
    i1.GeneratedColumn<String>('message_ids', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_45(String aliasedName) =>
    i1.GeneratedColumn<String>('encryption_data', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_46(String aliasedName) =>
    i1.GeneratedColumn<String>('upload_tokens', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_47(String aliasedName) =>
    i1.GeneratedColumn<String>('already_notified', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultValue: const CustomExpression('\'[]\''));

final class Schema5 extends i0.VersionedSchema {
  Schema5({required super.database}) : super(version: 5);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    contacts,
    messages,
    mediaUploads,
    mediaDownloads,
    signalIdentityKeyStores,
    signalPreKeyStores,
    signalSenderKeyStores,
    signalSessionStores,
  ];
  late final Shape6 contacts = Shape6(
      source: i0.VersionedTable(
        entityName: 'contacts',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(user_id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_39,
          _column_40,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 messages = Shape8(
      source: i0.VersionedTable(
        entityName: 'messages',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_48,
          _column_49,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 mediaUploads = Shape7(
      source: i0.VersionedTable(
        entityName: 'media_uploads',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 mediaDownloads = Shape9(
      source: i0.VersionedTable(
        entityName: 'media_downloads',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_50,
          _column_51,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 signalIdentityKeyStores = Shape2(
      source: i0.VersionedTable(
        entityName: 'signal_identity_key_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(device_id, name)',
        ],
        columns: [
          _column_31,
          _column_32,
          _column_33,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 signalPreKeyStores = Shape3(
      source: i0.VersionedTable(
        entityName: 'signal_pre_key_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(pre_key_id)',
        ],
        columns: [
          _column_34,
          _column_35,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 signalSenderKeyStores = Shape4(
      source: i0.VersionedTable(
        entityName: 'signal_sender_key_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(sender_key_name)',
        ],
        columns: [
          _column_36,
          _column_37,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 signalSessionStores = Shape5(
      source: i0.VersionedTable(
        entityName: 'signal_session_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(device_id, name)',
        ],
        columns: [
          _column_31,
          _column_32,
          _column_38,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape8 extends i0.VersionedTable {
  Shape8({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get contactId =>
      columnsByName['contact_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get messageId =>
      columnsByName['message_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get messageOtherId =>
      columnsByName['message_other_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get mediaUploadId =>
      columnsByName['media_upload_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get mediaDownloadId =>
      columnsByName['media_download_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get responseToMessageId =>
      columnsByName['response_to_message_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get responseToOtherMessageId =>
      columnsByName['response_to_other_message_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get acknowledgeByUser =>
      columnsByName['acknowledge_by_user']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<int> get downloadState =>
      columnsByName['download_state']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get acknowledgeByServer =>
      columnsByName['acknowledge_by_server']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get errorWhileSending =>
      columnsByName['error_while_sending']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get kind =>
      columnsByName['kind']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get contentJson =>
      columnsByName['content_json']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get openedAt =>
      columnsByName['opened_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get sendAt =>
      columnsByName['send_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<int> _column_48(String aliasedName) =>
    i1.GeneratedColumn<int>('media_upload_id', aliasedName, true,
        type: i1.DriftSqlType.int);
i1.GeneratedColumn<int> _column_49(String aliasedName) =>
    i1.GeneratedColumn<int>('media_download_id', aliasedName, true,
        type: i1.DriftSqlType.int);

class Shape9 extends i0.VersionedTable {
  Shape9({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get messageId =>
      columnsByName['message_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get downloadToken =>
      columnsByName['download_token']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<int> _column_50(String aliasedName) =>
    i1.GeneratedColumn<int>('message_id', aliasedName, false,
        type: i1.DriftSqlType.int);
i1.GeneratedColumn<String> _column_51(String aliasedName) =>
    i1.GeneratedColumn<String>('download_token', aliasedName, false,
        type: i1.DriftSqlType.string);

final class Schema6 extends i0.VersionedSchema {
  Schema6({required super.database}) : super(version: 6);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    contacts,
    messages,
    mediaUploads,
    mediaDownloads,
    signalIdentityKeyStores,
    signalPreKeyStores,
    signalSenderKeyStores,
    signalSessionStores,
  ];
  late final Shape6 contacts = Shape6(
      source: i0.VersionedTable(
        entityName: 'contacts',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(user_id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_39,
          _column_40,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 messages = Shape10(
      source: i0.VersionedTable(
        entityName: 'messages',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_48,
          _column_49,
          _column_20,
          _column_21,
          _column_22,
          _column_52,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 mediaUploads = Shape7(
      source: i0.VersionedTable(
        entityName: 'media_uploads',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 mediaDownloads = Shape9(
      source: i0.VersionedTable(
        entityName: 'media_downloads',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_50,
          _column_51,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 signalIdentityKeyStores = Shape2(
      source: i0.VersionedTable(
        entityName: 'signal_identity_key_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(device_id, name)',
        ],
        columns: [
          _column_31,
          _column_32,
          _column_33,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 signalPreKeyStores = Shape3(
      source: i0.VersionedTable(
        entityName: 'signal_pre_key_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(pre_key_id)',
        ],
        columns: [
          _column_34,
          _column_35,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 signalSenderKeyStores = Shape4(
      source: i0.VersionedTable(
        entityName: 'signal_sender_key_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(sender_key_name)',
        ],
        columns: [
          _column_36,
          _column_37,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 signalSessionStores = Shape5(
      source: i0.VersionedTable(
        entityName: 'signal_session_stores',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(device_id, name)',
        ],
        columns: [
          _column_31,
          _column_32,
          _column_38,
          _column_10,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape10 extends i0.VersionedTable {
  Shape10({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get contactId =>
      columnsByName['contact_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get messageId =>
      columnsByName['message_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get messageOtherId =>
      columnsByName['message_other_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get mediaUploadId =>
      columnsByName['media_upload_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get mediaDownloadId =>
      columnsByName['media_download_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get responseToMessageId =>
      columnsByName['response_to_message_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get responseToOtherMessageId =>
      columnsByName['response_to_other_message_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get acknowledgeByUser =>
      columnsByName['acknowledge_by_user']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get mediaStored =>
      columnsByName['media_stored']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<int> get downloadState =>
      columnsByName['download_state']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get acknowledgeByServer =>
      columnsByName['acknowledge_by_server']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get errorWhileSending =>
      columnsByName['error_while_sending']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get kind =>
      columnsByName['kind']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get contentJson =>
      columnsByName['content_json']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get openedAt =>
      columnsByName['opened_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get sendAt =>
      columnsByName['send_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<bool> _column_52(String aliasedName) =>
    i1.GeneratedColumn<bool>('media_stored', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("media_stored" IN (0, 1))'),
        defaultValue: const CustomExpression('0'));
i0.MigrationStepWithVersion migrationSteps({
  required Future<void> Function(i1.Migrator m, Schema2 schema) from1To2,
  required Future<void> Function(i1.Migrator m, Schema3 schema) from2To3,
  required Future<void> Function(i1.Migrator m, Schema4 schema) from3To4,
  required Future<void> Function(i1.Migrator m, Schema5 schema) from4To5,
  required Future<void> Function(i1.Migrator m, Schema6 schema) from5To6,
}) {
  return (currentVersion, database) async {
    switch (currentVersion) {
      case 1:
        final schema = Schema2(database: database);
        final migrator = i1.Migrator(database, schema);
        await from1To2(migrator, schema);
        return 2;
      case 2:
        final schema = Schema3(database: database);
        final migrator = i1.Migrator(database, schema);
        await from2To3(migrator, schema);
        return 3;
      case 3:
        final schema = Schema4(database: database);
        final migrator = i1.Migrator(database, schema);
        await from3To4(migrator, schema);
        return 4;
      case 4:
        final schema = Schema5(database: database);
        final migrator = i1.Migrator(database, schema);
        await from4To5(migrator, schema);
        return 5;
      case 5:
        final schema = Schema6(database: database);
        final migrator = i1.Migrator(database, schema);
        await from5To6(migrator, schema);
        return 6;
      default:
        throw ArgumentError.value('Unknown migration from $currentVersion');
    }
  };
}

i1.OnUpgrade stepByStep({
  required Future<void> Function(i1.Migrator m, Schema2 schema) from1To2,
  required Future<void> Function(i1.Migrator m, Schema3 schema) from2To3,
  required Future<void> Function(i1.Migrator m, Schema4 schema) from3To4,
  required Future<void> Function(i1.Migrator m, Schema5 schema) from4To5,
  required Future<void> Function(i1.Migrator m, Schema6 schema) from5To6,
}) =>
    i0.VersionedSchema.stepByStepHelper(
        step: migrationSteps(
      from1To2: from1To2,
      from2To3: from2To3,
      from3To4: from3To4,
      from4To5: from4To5,
      from5To6: from5To6,
    ));
